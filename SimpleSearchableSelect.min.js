/**!
 * SSS (aka SimpleSearchableSelect aka SmartSelectSystem)
 *
 * @version   v1.2.0
 * @author    Chalda Pnuzig <chalda＠chalda.it>
 * @copyright Chalda Pnuzig 2023
 * {@link     https://github.com/chalda-pnuzig/SimpleSearchableSelect|GitHub}
 * @license   ISC
 */
class t{$input=document.createElement("input");$dataList=document.createElement("datalist");$target;$label;options={inputIntervalTimeout:200,idPrefix:"SSS_",insertPosition:"beforebegin",swipeOffset:50,swipeAnimationSpeed:200,promiseData:!1,selectedStyle:!1,multiple:void 0,required:void 0,placeholder:void 0};#values={};#refs={};#clones={};#validValues={};#datalistOptions={};constructor(t,e={}){if(t)return t.hasOwnProperty("SSS")?t.SSS:(this.$target=t,(this.$target.SSS=this).options.multiple=t.multiple,this.options.required=t.required,this.options={...this.options,...e},this.#init(),this);throw new Error("SSS: Target select not found!")}#addMultipleValue(t,s=!0){if(void 0!==this.#clones[t])this.#clones[t].focus(),this.$input.value="";else if(t){this.#values[t]=this.#refs[t];const a=this.$input.cloneNode(!0);let e=0,i=0;if(a.addEventListener("touchstart",t=>e=t.changedTouches[0].screenX),a.classList.add("SSS_clone"),a.style.setProperty("--SSS-x","0"),a.style.setProperty("--SSS-s",this.options.swipeAnimationSpeed+"ms"),a.style.height||=window.getComputedStyle(this.$input).height,a.SSSDelete=()=>{a.style.setProperty("--SSS-x","0"),a.style.height=a.style.padding=a.style.border=a.style.fontSize=a.style.opacity="0",a.style.transition="all var(--SSS-s)",setTimeout(()=>{a.remove(),this.#validValues[this.#refs[t]].selected=!1,delete this.#values[t],delete this.#clones[t],this.options.required&&(this.$input.required=0===Object.keys(this.#clones).length),this.#datalistOptions[t].disabled=!1,this.#datalistOptions[t].text=this.#datalistOptions[t].dataset.original,s&&this.$target.dispatchEvent(new Event("change"))},this.options.swipeAnimationSpeed)},a.style.transform+=" translateX(var(--SSS-x))",a.addEventListener("touchend",t=>{i=t.changedTouches[0].screenX,e-i>=this.options.swipeOffset?i<e&&a.SSSDelete():a.style.setProperty("--SSS-x","0")}),a.addEventListener("touchmove",t=>{t=(i=t.changedTouches[0].screenX)<e?-Math.min(e-i,this.options.swipeOffset):0;a.style.setProperty("--SSS-x",t+"px")}),(this.#clones[t]=a).readOnly=!0,a.addEventListener("keydown",t=>{["Backspace","Delete"].includes(t.key)&&a.SSSDelete()}),this.$input.insertAdjacentElement("beforebegin",a),this.$input.value="",this.$input.required=!1,"function"==typeof this.options.selectedStyle?this.#datalistOptions[t].text=this.options.selectedStyle(this.#refs[t])+"⁣":this.#datalistOptions[t].disabled=!0,this.options.showPicker)try{this.$input.showPicker()}catch(t){}const l=Object.keys(this.#clones);Object.values(this.#validValues).forEach(t=>t.selected=l.includes(t.value)),s&&this.$target.dispatchEvent(new Event("change"))}}setValue(t,e=!0){(this.options.multiple&&Array.isArray(t)?t:[t]).forEach(t=>{this.$input.value=this.#refs[t]||"",this.options.multiple?this.#addMultipleValue(t,!1):(this.#values[t]=this.#refs[t],this.$target.value=t)}),e&&this.$target.dispatchEvent(new Event("change"))}clearValue(t=!1){this.options.multiple?(!1===t&&(t=Object.keys(this.#values)),(Array.isArray(t)?t:[t]).forEach(t=>{this.#clones[t]&&this.#clones[t].SSSDelete()})):(this.$input.value="",this.$target.value="")}destroy(){this.$target.SSS&&(this.$target.hidden=!1,delete this.$target.SSS,this.$dataList.remove(),this.$input.remove(),this.$target.required="1"===this.$target.dataset.sssRequired,this.$target.multiple="1"===this.$target.dataset.sssMultiple,delete this.$target.dataset.sssRequired,delete this.$target.dataset.sssMultiple,this.options.multiple&&Object.values(this.#clones).forEach(t=>t.remove()),this.$label)&&(this.$label.setAttribute("for",this.$label.dataset.sssOriginal),delete this.$label.dataset.sssOriginal)}resetValue(){this.clearValue();let a=[];this.$target.querySelectorAll("option").forEach(t=>{var e,i=t.textContent,s=t.value;t.selected&&t.value&&a.push(i),s?(e=new Option(i),this.$dataList.append(e),e.dataset.original=i,this.#datalistOptions[s]=e,this.#validValues[i]=t,this.#refs[s]=i):this.$input.placeholder=i}),this.options.placeholder&&(this.$input.placeholder=this.options.placeholder),a.length&&(this.options.multiple?[...this.$target.selectedOptions].forEach(t=>{this.setValue(t.value,!1)}):this.$input.value=a[0])}#init(){this.$target.getAttributeNames().forEach(t=>{t.match(/^(name|id)$/i)||this.$input.setAttribute(t,this.$target.getAttribute(t))}),this.$input.setAttribute("autocomplete","off"),this.$target.hidden=!0,this.$target.dataset.sssRequired=this.$target.required?"1":"0",this.$target.dataset.sssMultiple=this.$target.multiple?"1":"0",this.$target.required=this.options.required,this.$target.multiple=this.options.multiple;let t=1;for(;document.getElementById(this.options.idPrefix+t+"_list");)t++;this.options.idPrefix+=t,this.$target.id&&(this.$label=document.querySelector(`label[for="${this.$target.id}"]`),this.$label)&&(this.$label.dataset.sssOriginal=this.$target.id,this.$label.setAttribute("for",this.options.idPrefix+"_input")),this.$dataList.id=this.options.idPrefix+"_list",this.$input.id=this.options.idPrefix+"_input",this.$input.required=this.options.required,this.$input.multiple=this.options.multiple,this.$input.setAttribute("list",this.options.idPrefix+"_list"),this.$input.classList.add("SSS_input"),this.$target.insertAdjacentElement(this.options.insertPosition,this.$input),document.body.append(this.$dataList),this.resetValue();let s=!1;this.$input.addEventListener("input",()=>{s&&clearTimeout(s);let i=this.$input.value;var t=Object.values(this.#datalistOptions).filter(t=>t.text===i);if(1===t.length&&(i=t[0].dataset.original),this.options.promiseData)s=setTimeout(()=>{this.#validValues[i]?this.setValue(this.#validValues[i].value):this.options.promiseData(i).then(s=>{Object.keys(s).forEach(t=>{var e,i=s[t];void 0===this.#validValues[i]&&(e=new Option(i,t),this.#validValues[i]=e,this.$target.append(e),this.#refs[t]=i,(e=new Option(i)).dataset.original=i,this.#datalistOptions[t]=e,this.$dataList.append(e))})})},this.options.inputIntervalTimeout);else{let e=new RegExp("^"+i.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")+"$","i"),t=Object.keys(this.#validValues).find(t=>t.match(e));t&&(s=setTimeout(()=>{this.setValue(this.#validValues[t].value)},this.options.inputIntervalTimeout))}}),this.$input.addEventListener("blur",()=>{var t=this.$input.value;t&&!Object.keys(this.#validValues).includes(t)&&this.setValue("")}),this.options.showPickerOnFocus&&this.$input.addEventListener("focus",()=>{try{this.$input.showPicker()}catch(t){}}),this.$input.addEventListener("keydown",t=>{switch(t.key){case"Backspace":case"Delete":this.setValue("");break;case"Tab":case"Enter":var e=this.$input.value;const i=new RegExp(""+e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"i");e=Object.keys(this.#validValues).find(t=>t.match(i));e&&this.setValue(this.#validValues[e].value)}})}getValues(){return this.#values}}export{t as SSS};